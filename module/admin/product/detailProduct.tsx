import { Button, Col, Form, Input, InputNumber, Modal, Row, Upload } from 'antd'
import Head from 'next/head'
import React, { useState } from 'react'
import PageTitle from '../../../components/PageTitle'
import type { UploadFile } from 'antd/es/upload/interface';
import type { RcFile, UploadProps } from 'antd/es/upload';
import { PlusOutlined } from '@ant-design/icons';
import classNames from 'classnames/bind'
import style from "../Admin.module.scss"
import { useQuery } from 'react-query';
import { getProductID } from '../../../api/ApiProduct';
import { useRouter } from 'next/router';

const getBase64 = (file: RcFile): Promise<string> =>
  new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => resolve(reader.result as string);
    reader.onerror = (error) => reject(error);
});

const { TextArea } = Input;

const cx = classNames.bind(style)

export default function ProductDetailAdmin() {
    const [previewOpen, setPreviewOpen] = useState(false);
    const [previewImage, setPreviewImage] = useState('');
    const [previewTitle, setPreviewTitle] = useState('');
    const [fileList, setFileList] = useState<UploadFile[]>([]);
    const router = useRouter();
    const { id } = router.query;
    const { isLoading, isError, isFetching, data, error } = useQuery(['product', id], () => getProductID(`${id}`),
        {
            enabled: id != undefined
        }
    );
    const severImages: string[] = data?.data[0].image.split(";")
    const image: string[] = severImages || [];
    
    const handleCancel = () => setPreviewOpen(false);
  
    const handlePreview = async (file: UploadFile) => {
      if (!file.url && !file.preview) {
        file.preview = await getBase64(file.originFileObj as RcFile);
      }
  
      setPreviewImage(file.url || (file.preview as string));
      setPreviewOpen(true);
      setPreviewTitle(file.name || file.url!.substring(file.url!.lastIndexOf('/') + 1));
    };
  
    const handleChange: UploadProps['onChange'] = ({ fileList: newFileList }) =>
      setFileList(newFileList);
  
    const uploadButton = (
      <div>
        <PlusOutlined />
        <div style={{ marginTop: 8 }}>Upload</div>
      </div>
    );
    console.log(data)

  return (
    <div>
        <Head >
            <title>Fooce | Admin - Product </title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/icon.png" />
        </Head>
        <PageTitle name = "Admin - Product Update" />
        <div className={cx('admin')}>
            <Row gutter={16}>
                <Col span={8} style={{textAlign: 'center'}} className='gutter-row'>
                    <Upload
                    action="https://www.mocky.io/v2/5cc8019d300000980a055e76"
                    listType="picture-card"
                    fileList={fileList}
                    onPreview={handlePreview}
                    onChange={handleChange}
                    >
                        {fileList.length >= 4 ? null : uploadButton}
                    </Upload>
                    <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>
                        <img alt="example" style={{ width: '100%' }} src={previewImage} />
                    </Modal>
                </Col>
                <Col span={16} className='gutter-row'>
                    <Form
                    name="basic"
                    layout= "vertical"
                
                    labelCol={{ span: 8 }}
                    wrapperCol={{ span: 16 }}
                
                    initialValues={{ remember: true }}
                    
                    autoComplete="off"
                    className={cx("form")}
                >
                        <Form.Item
                        label="Product Name"
                        name="name"
                        rules={[{ required: true, message: 'Please input product name!' }]}
                        className={cx("form-label")}
                        wrapperCol={{ span: 24 }}
                        >
                        <Input className={cx("form-input")}/>
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Price"
                            name="price"
                            rules={[{ required: true, message: 'Please input product price!' }]}
                            className={cx("form-label")}
                            wrapperCol={{ span: 24 }}
                        >
                        <InputNumber className={cx("form-input")} style={{minWidth: '200px'}}/>
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Description"
                            name="s_description"
                            rules={[{ required: true, message: 'Please input short description!' }]}
                            className={cx("form-label")}
                            wrapperCol={{ span: 24 }}
                        >
                        <TextArea style={{height: '100px', padding: '10px'}} />
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Category"
                            name="category"
                            rules={[{ required: true, message: 'Please input product category!' }]}
                            className={cx("form-label")}
                            wrapperCol={{ span: 24 }}
                        >
                        
                        <Input className={cx("form-input")}/>
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Long Description"
                            name="l_desciption"
                            
                            wrapperCol={{ span: 24 }}
                            className={cx("form-label")}
                            >
                            <TextArea style={{height: '100px', padding: '10px'}} />
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Weight"
                            name="weight"
                            rules={[{ required: true, message: 'Please input product weight!' }]}
                            wrapperCol={{ span: 24 }}
                            className={cx("form-label")}
                            >
                            <Input className={cx("form-input")}/>
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Dimensions"
                            name="dimensions"
                            rules={[{ required: true, message: 'Please input product dimensions!' }]}
                            wrapperCol={{ span: 24 }}
                            className={cx("form-label")}
                            >
                            <Input className={cx("form-input")}/>
                        </Form.Item>
                        <br />
                        <Form.Item
                            label="Tags (food/juice) "
                            name="tags"
                            rules={[{ required: true, message: 'Please input product tag!' }]}
                            wrapperCol={{ span: 24 }}
                            className={cx("form-label")}
                            >
                            <Input className={cx("form-input")}/>
                        </Form.Item>
                        <br />
                        <Form.Item wrapperCol={{ span: 24 }}>
                            <Button className='btn' htmlType="submit">update</Button>
                        </Form.Item>
                    </Form>
                </Col>
            </Row>
                
            </div>
    </div>
  )
}
