import { Button,  Table } from 'antd';
import { ColumnsType, TableProps } from 'antd/es/table';
import Head from 'next/head'
import React from 'react'
import PageTitle from '../../../components/PageTitle'
import classNames from 'classnames/bind'
import style from "../Admin.module.scss"


interface DataType_Product {
    key: React.Key;
    name: string;
    price: number;
    tag: string;
    category: string;
}

const columns_product: ColumnsType<DataType_Product> = [
    {
      title: 'Name',
      dataIndex: 'name',
      
      // specify the condition of filtering result
      // here is that finding the name started with `value`
      onFilter: (value: string, record) => record.name.indexOf(value) === 0,
      sorter: (a, b) => a.name.length - b.name.length,
      sortDirections: ['descend'],
    },
    {
      title: 'Price',
      dataIndex: 'price',
      defaultSortOrder: 'descend',
      sorter: (a, b) => a.price - b.price,
    },
    {
      title: 'Tags',
      dataIndex: 'tag',
      filters: [
        {
          text: 'Food',
          value: 'Food',
        },
        {
          text: 'Juice',
          value: 'Juice',
        },
      ],
      onFilter: (value: string, record) => record.tag.indexOf(value) === 0,
    },
    {
        title: 'Category',
        dataIndex: 'category',
        filters: [
          {
            text: 'Pizza',
            value: 'pizza',
          },
          {
            text: 'Noodle soup',
            value: 'noodle_soup',
          },
          {
            text: 'Rice Noodle',
            value: 'rice_noodle',
          },
          {
            text: 'Rice bowl',
            value: 'rice_bowl',
          },
          {
            text: 'Beefsteak',
            value: 'beefsteak',
          },
          {
            text: 'Pasta',
            value: 'pasta',
          },
          {
            text: 'Colorful',
            value: 'colorful',
          },
          {
            text: 'Fruit Bowl',
            value: 'fruit_Bowl',
          },
          {
            text: 'Healthy',
            value: 'healthy',
          },
          {
            text: 'Ice Cream',
            value: 'ice_Cream',
          },
          {
            text: 'Mixed',
            value: 'mixed',
          },
          {
            text: 'Smoothie',
            value: 'smoothie',
          },
          {
            text: 'Shakes',
            value: 'shakes',
          },

        ],
        onFilter: (value: string, record) => record.category.indexOf(value) === 0,
      },
    {
        title: 'Action',
        dataIndex: 'action',
        
        render: (_, record) => {
            return (
                <div style={{textAlign: 'center'}}>
                    <Button className='btn'>view</Button>
                    <br />
                    <Button className='btn'>delete</Button>
                    <br />
                    <Button className='btn'>update</Button>
                </div>
                
            )
        }
    }
  ];


const data_product = [
{
    key: '1',
    name: 'Smoothie',
    price: 32000,
    tag: 'Juice',
    category: 'shakes'
},
{
    key: '2',
    name: 'Pasta',
    price: 330000,
    tag: 'Food',
    category: 'pasta'
    },
];

const cx = classNames.bind(style)
export default function ProductManager() {
const onChange: TableProps<DataType_Product>['onChange'] = (pagination, filters, sorter, extra) => {
    console.log('params', pagination, filters, sorter, extra);
    };
        
  return (
    <div>
        <Head >
            <title>Fooce | Admin - Product Manager</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/icon.png" />
        </Head>
        <PageTitle name = "Admin - Product List" />
        <div className={cx('admin')}>
        <Table columns={columns_product} dataSource={data_product} onChange={onChange} />
        </div>
    </div>
  )
}
